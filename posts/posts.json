[
  {
    "path": "posts/401-case1-eda/",
    "title": "Exploratory exposure-response analysis",
    "description": "The importance of understanding the scientific context.",
    "author": [
      {
        "name": "Marc Vandemeulebroecke",
        "url": "https://graphicsprinciples.github.io/"
      },
      {
        "name": "Mark Baillie",
        "url": "https://graphicsprinciples.github.io/"
      },
      {
        "name": "Alison Margolskee",
        "url": "https://graphicsprinciples.github.io/"
      },
      {
        "name": "Baldur Magnusson",
        "url": "https://graphicsprinciples.github.io/"
      }
    ],
    "date": "2020-12-12",
    "categories": [
      "case studies",
      "example code",
      "EDA",
      "workflow"
    ],
    "contents": "\r\nThis example illustrates the importance of understanding the scientific context when exploring data graphically. An exploratory data analysis is more than just “plotting data”; it can lead to a deeper understanding and inform next steps (Gabry et al. 2019; Gelman 2004). However, like an analysis that is poorly thought through, a poorly implemented graph can also deceive.\r\nConsider an inhaled drug intended to improve lung function, with the target site of action in the lung. The drug is also absorbed systemically from the lung. Suppose that the team wants to fine-tune the choice of a recommended dose. A typical starting point for this question is often a plot of the response variable of interest against a summary measure of plasma concentration (e.g. the area under the concentration time curve, AUC). Figure 1 shows such a plot, generated using the default settings of the R package ggplot2.\r\n\r\n\r\n## Read in data\r\nmy_data <- \r\n  read_csv(\"../../data/401_case1_PKPDdataset_ard.csv\") %>%\r\n  filter(CYCLE == 1)\r\n\r\n## Plot response vs exposure\r\nmy_data %>%\r\n  ggplot(aes(x = AUC, y = sCHG)) + \r\n  geom_point() + \r\n  scale_y_continuous(breaks = seq(-800, 800, 200)) +  \r\n  theme_gray(base_size = 10) +\r\n  labs(x = \"RESN\", y = \"LIDV\", title = \"\")\r\n\r\n\r\n\r\n\r\nFigure 1: A scatterplot of response vs. exposure with ‘default’ ggplot theme. It is common during an exploratory data analysis to display variable names directly from source data rather than an informative description. For this example RESN = AUC0-24h (h*ug/mL) and LIDV = FEV1 change from baseline (mL).\r\n\r\n\r\n\r\nIn terms of good graphical principles, this plot leaves a fair bit to be desired. Several improvements are warranted, including proper axis scaling, gridlines, annotation, font size, etc. One particularly egregious issue is the lack of care in selecting axis labels, leaving programming labels for the plotted variables (presumably only then to make the effort of explaining them in a caption). An improved version is shown in Figure 2, addressing many of these formatting issues. With an added LOESS smoother (Cleveland 1979), we see a positive non-linear trend, suggesting a shallow sigmoidal exposure-response relationship.\r\n\r\n\r\nmy_data %>%\r\n  ggplot(aes(x = AUC, y = sCHG)) + \r\n  geom_point(alpha = 0.7) + \r\n  geom_smooth(method = \"loess\", colour = \"red\") +\r\n  scale_x_log10(breaks = lbr, labels = llb) + \r\n  scale_y_continuous(breaks = seq(-800, 800, 200)) +\r\n  annotation_logticks(sides = \"b\") +\r\n  labs(\r\n    x = expression(paste(\"AUC0-24h (h*\",mu,\"g/mL)\", sep = \"\")),\r\n    y = \"FEV1 change from baseline (mL)\", \r\n    title = \"Exposure is positively associated with response\",\r\n    subtitle = \"Loess smoother (95% CI)\"\r\n    ) +\r\n  paper_theme() \r\n\r\n\r\n\r\n\r\nFigure 2: An improved scatterplot of exposure vs. response, including a LOESS smoothing curve to help visualizing the trend.\r\n\r\n\r\n\r\nIt is tempting, especially when presented with a suboptimal graph, to immediately set about fixing the various graphical imperfections and produce a more appropriate and visually appealing version of the same graph. This is an example of selective attention, focusing on the detail but overlooking the higher purpose of the task (i.e. the “why”). Instead, let us now take a step back and revisit this example in the context of the first law of visual communication: have a clear purpose.\r\nWhy are we conducting an exposure-response analysis? Recall that the scientific interest is to fine-tune the dose, and that the drug is inhaled and acting locally in the lung. The implicit assumption of an exposure-response analysis is one of causality. Here, however, plasma concentration is unlikely to be on the causal path from dose to response. What would be a better way to address the scientific question of interest?\r\n\r\n\r\nmy_data %>%\r\n  ggplot(aes(x = AUC, y = sCHG, colour = factor(DOSE))) + \r\n  geom_point(alpha = 0.5) + \r\n  geom_smooth(method = \"lm\", se = FALSE) + \r\n  scale_colour_brewer(palette = \"Set2\" , name = \"Dose (mg)\") + \r\n  scale_x_log10(breaks = lbr, labels = llb) + \r\n  scale_y_continuous(breaks = seq(-800, 800, 200)) + \r\n  annotation_logticks(sides = \"b\") +\r\n  labs(\r\n    x = expression(paste(\"AUC0-24h (h*\", mu, \"g/mL)\", sep = \"\")), \r\n    y = \"FEV1 change from baseline (mL)\", \r\n    title = \"Exposure is not a better predictor of response than dose\") + \r\n  paper_theme() + \r\n  theme(\r\n    legend.position = c(\"right\"),\r\n    legend.title = element_text(size = 10)\r\n    )\r\n\r\n\r\n\r\n\r\nFigure 3: Visualization of exposure and response within levels of dose. The scatterplot is fundamentally changed by revisiting the question of interest and then applying good graphical principles.\r\n\r\n\r\n\r\nConsider Figure 3, where instead of estimating an overall trend we now look at the trends within dose. Clearly, any apparent trends within dose do not follow a consistent pattern across doses. The only reason why exposure and response appeared associated in the previous two plots is that they share a common cause, namely dose. In other words, dose is a confounder in those plots, and indeed dose is a better predictor of response than systemic concentration. We should build a dose-response model, rather than an exposure-response model, and choose a recommended dose based on this (and any information on safety and tolerability).\r\n\r\n\r\nsessionInfo()\r\n\r\n\r\n## R version 4.0.2 (2020-06-22)\r\n## Platform: x86_64-w64-mingw32/x64 (64-bit)\r\n## Running under: Windows 10 x64 (build 19041)\r\n## \r\n## Matrix products: default\r\n## \r\n## locale:\r\n## [1] LC_COLLATE=English_Switzerland.1252 \r\n## [2] LC_CTYPE=English_Switzerland.1252   \r\n## [3] LC_MONETARY=English_Switzerland.1252\r\n## [4] LC_NUMERIC=C                        \r\n## [5] LC_TIME=English_Switzerland.1252    \r\n## \r\n## attached base packages:\r\n## [1] stats     graphics  grDevices utils     datasets \r\n## [6] methods   base     \r\n## \r\n## other attached packages:\r\n##  [1] RColorBrewer_1.1-2 forcats_0.5.0     \r\n##  [3] stringr_1.4.0      dplyr_1.0.0       \r\n##  [5] purrr_0.3.4        readr_1.3.1       \r\n##  [7] tidyr_1.1.0        tibble_3.0.3      \r\n##  [9] ggplot2_3.3.2      tidyverse_1.3.0   \r\n## \r\n## loaded via a namespace (and not attached):\r\n##  [1] tidyselect_1.1.0 xfun_0.15        lattice_0.20-41 \r\n##  [4] splines_4.0.2    haven_2.3.1      colorspace_1.4-1\r\n##  [7] vctrs_0.3.1      generics_0.0.2   htmltools_0.5.0 \r\n## [10] mgcv_1.8-31      yaml_2.2.1       blob_1.2.1      \r\n## [13] rlang_0.4.7      pillar_1.4.6     glue_1.4.1      \r\n## [16] withr_2.2.0      DBI_1.1.0        dbplyr_1.4.4    \r\n## [19] modelr_0.1.8     readxl_1.3.1     lifecycle_0.2.0 \r\n## [22] munsell_0.5.0    gtable_0.3.0     cellranger_1.1.0\r\n## [25] rvest_0.3.5      evaluate_0.14    labeling_0.3    \r\n## [28] knitr_1.29       fansi_0.4.1      highr_0.8       \r\n## [31] broom_0.7.0      Rcpp_1.0.5       scales_1.1.1    \r\n## [34] backports_1.1.7  jsonlite_1.7.0   farver_2.0.3    \r\n## [37] fs_1.4.2         distill_1.1      hms_0.5.3       \r\n## [40] digest_0.6.25    stringi_1.4.6    grid_4.0.2      \r\n## [43] cli_2.0.2        tools_4.0.2      magrittr_1.5    \r\n## [46] crayon_1.3.4     pkgconfig_2.0.3  downlit_0.2.1   \r\n## [49] Matrix_1.2-18    ellipsis_0.3.1   xml2_1.3.2      \r\n## [52] reprex_0.3.0     lubridate_1.7.9  assertthat_0.2.1\r\n## [55] rmarkdown_2.5    httr_1.4.1       rstudioapi_0.11 \r\n## [58] R6_2.4.1         nlme_3.1-148     compiler_4.0.2\r\n\r\n\r\n\r\n\r\nCleveland, William S. 1979. “Robust Locally Weighted Regression and Smoothing Scatterplots.” Journal of the American Statistical Association 74 (368): 829–36. https://doi.org/10.1080/01621459.1979.10481038.\r\n\r\n\r\nGabry, Jonah, Daniel Simpson, Aki Vehtari, Michael Betancourt, and Andrew Gelman. 2019. “Visualization in Bayesian Workflow.” Journal of the Royal Statistical Society: Series A (Statistics in Society) 182 (2): 389–402. https://doi.org/10.1111/rssa.12378.\r\n\r\n\r\nGelman, Andrew. 2004. “Exploratory Data Analysis for Complex Models.” Journal of Computational and Graphical Statistics 13 (4): 755–79. https://doi.org/10.1198/106186004X11435.\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/401-case1-eda/401-case1-eda_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2020-12-12T17:18:23+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/402-case2-pk/",
    "title": "Pharmacokinetic exposure by ethnicity",
    "description": "Clarifying the purpose.",
    "author": [
      {
        "name": "Marc Vandemeulebroecke",
        "url": "https://graphicsprinciples.github.io/"
      },
      {
        "name": "Mark Baillie",
        "url": "https://graphicsprinciples.github.io/"
      },
      {
        "name": "Alison Margolskee",
        "url": "https://graphicsprinciples.github.io/"
      },
      {
        "name": "Baldur Magnusson",
        "url": "https://graphicsprinciples.github.io/"
      }
    ],
    "date": "2020-12-12",
    "categories": [
      "case studies",
      "example code",
      "PK/PD",
      "subgroups"
    ],
    "contents": "\r\nThis case study is inspired by a publication comparing the pharmacokinetic exposure of a drug in Caucasian vs. Japanese subjects. The same single oral dose was administered to all subjects. The original graph displays mean +/- standard deviations (SD) of the plasma concentration over time, grouped by ethnicity (Caucasian or Japanese).\r\nAfter reading in and performing a number of small number of data transformations we recreate the original graph in Figure 1.\r\n\r\n\r\nmy_data <- read_csv(\"../../data/402_case2_PKdataset.csv\") %>%\r\n  filter(CMT == 2 & DOSE == 300 & PART == 1 & STUDY == 1) %>%\r\n  mutate(\r\n    TRTACT = factor(TRTACT, levels = rev(unique(TRTACT[order(DOSE)]))),\r\n    ETHN = factor(ETHN),\r\n    ETHN = factor(ETHN, levels = rev(levels(ETHN)))\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n## Plot mean and error bars (SD) on a linear scale\r\nmy_data %>%\r\n  ggplot(aes(\r\n    x = NOMTIME,\r\n    y = LIDV,\r\n    group = interaction(ETHN, CYCLE)\r\n  )) +\r\n  stat_summary(\r\n    geom = \"errorbar\",\r\n    width = 2,\r\n    fun.data = mean_sdl,\r\n    fun.args = list(mult = 1)\r\n  ) +\r\n  stat_summary(geom = \"line\", size = 0.5,\r\n               fun.y = mean) +\r\n  stat_summary(\r\n    aes(fill = ETHN),\r\n    geom = \"point\",\r\n    size = 1.5,\r\n    fun.y = mean,\r\n    stroke = 0.5,\r\n    shape = 21\r\n  ) +\r\n  scale_fill_manual(values = c(\"white\", \"black\")) +\r\n  scale_x_continuous(breaks = c(0, 4, 8, 12, 24, 36, 48, 72)) +\r\n  xlab(\"Time (h)\") +\r\n  ylab(\"Concentration (ng/mL)\\nMean (SD)\") +\r\n  theme_bw(base_size = 8) +\r\n  theme(\r\n    legend.title = element_blank(),\r\n    legend.position = \"bottom\",\r\n    legend.box.spacing = unit(0, \"mm\")\r\n  )\r\n\r\n\r\n\r\n\r\nFigure 1: Pharmacokinetic exposure by ethnicity.\r\n\r\n\r\n\r\nThis time, let us start with Law 1. What is the purpose of this graph? For drugs that are mainly developed in a Caucasian population, Japanese drug regulation requires sponsors to investigate whether the pharmacokinetics (PK) are similar or different between Caucasian and Japanese populations. The purpose of this graph is to help address this question. Looking at it, we may be tempted so say that the PK are reasonably similar. But are they really? If they are not, then in what way?\r\nThis leads us to Law 2: show the data clearly. The graphical attributes in Figure 1 appear to be wisely chosen: the symbols and labels are clear, the gridlines are supportive and stay in the background, and there is no unnecessary adornment. However, at least two things obscure the answer to our question of interest. First, the concentrations are plotted on a linear scale, which makes it difficult to distinguish them at the lower end of the profile. Concentrations should be plotted on a logarithmic scale because they are log-normally distributed. In fact, for concentrations in particular (but not generally for any log-normally distributed data) we should produce both types of display: one on a log-linear scale (to assess the elimination phase) and one on a linear scale (to see the peak more clearly). Second, it is hard to determine whether any differences are significant when standard deviations are plotted instead of standard errors or confidence intervals. Standard deviations show the variation in the data; they do not shrink when more data is collected. Standard errors show the variation in the means. Confidence intervals may be the best choice as they directly show the uncertainty about the means.\r\n\r\n\r\n## Mean (95% CI) error bars, log scale\r\nmy_data %>%\r\n  ggplot(aes(\r\n    x = NOMTIME,\r\n    y = LIDV,\r\n    group = interaction(ETHN, CYCLE)\r\n  )) +\r\n  stat_summary(\r\n    geom = \"errorbar\",\r\n    width = 2,\r\n    fun.data = mean_cl_normal,\r\n    fun.args = list(mult = 1)\r\n  ) +\r\n  stat_summary(geom = \"line\", size = 0.5,\r\n               fun.y = mean) +\r\n  stat_summary(\r\n    aes(fill = ETHN),\r\n    geom = \"point\",\r\n    size = 1.5,\r\n    fun.y = mean,\r\n    stroke = 0.5,\r\n    shape = 21\r\n  ) +\r\n  scale_fill_manual(values = c(\"white\", \"black\")) +\r\n  scale_x_continuous(breaks = c(0, 4, 8, 12, 24, 36, 48, 72)) +\r\n  xlab(\"Time (h)\") + ylab(\"Concentration (ng/mL)\\nMean (95% CI)\") +\r\n  guides(color = guide_legend(title = \"Dose\")) +\r\n  scale_y_log10() +\r\n  annotation_logticks(base = 10,\r\n                      sides = \"l\",\r\n                      color = rgb(0.5, 0.5, 0.5)) +\r\n  theme_bw(base_size = 8) +\r\n  theme(\r\n    legend.title = element_blank(),\r\n    legend.position = \"bottom\",\r\n    legend.box.spacing = unit(0, \"mm\")\r\n  )\r\n\r\n\r\n\r\n\r\nFigure 2: Figure 1 looks fair at first sight but reveals important information after two simple changes, namely, scaling the y-axis differently and plotting confidence intervals instead of standard deviations\r\n\r\n\r\n\r\nThese issues have been fixed in Figure 2 (we only show the log-linear version). To reduce cluttering, the ticks at the end of the whiskers have also been omitted (non-data ink). If the graph displayed more than two profiles, we might consider replacing the whiskers by (shaded) confidence bands, or separating the graph out in panels or “small multiples” (see bottom of the backside of the Cheat Sheet. From Figure 8B it appears that the higher concentrations are not meaningfully different, but the elimination phase does differ between the two ethnicities. This could also translate to different average exposures. That is, based on two simple changes in the plot, we now see answers emerging for our initial question about PK differences. We see them emerging with respect to three key PK characteristics: peak, elimination/trough, and overall exposure. While (depending on the drug) similarity in the peak may be reassuring from a safety point of view, a lower overall exposure in Japanese subjects could be a concern for efficacy.\r\nMoving on to Law 3, let us now make the message obvious. We could choose a completely different graph type to hone in on the message. Figure 3 shows the three (non-compartmentally derived) quantities Cmax, Ctrough and AUClast with 95% confidence intervals by ethnicity. Clearly, Ctrough and AUC are different between the two ethnicities, but Cmax is not. We could derive these quantities from a compartmental model fit and produce the same plot. Or we could go one step further and show directly their geometric mean ratio, Japanese vs. Caucasian subjects, as in Figure 8D. This last plot answers the initial question most succinctly, and its graphical appearance has also been further simplified (no frame, minimal gridlines, mildly highlighted line of equality), to not distract from the message. In practice, Figures 2, 3 and/or 4 together may be most informative, covering the time course as well as differences in key parameters.\r\n\r\n\r\ntheme_set(theme_bw(base_size = 10))\r\n\r\n## Plot cmax, ctrough, AUClast dots (95% CI) in separate panels\r\n\r\nCmax <- my_data %>%\r\n  filter(!is.na(LIDV))  %>%\r\n  group_by(ID, ETHN) %>%\r\n  summarize(Cmax = max(LIDV),\r\n            Ctrough = min(LIDV))\r\n\r\nCtrough <- my_data %>%\r\n  filter(!is.na(LIDV))  %>%\r\n  group_by(ID, ETHN) %>%\r\n  summarize(Ctrough = min(LIDV))\r\n\r\nAUClast <- my_data %>%\r\n  filter(!is.na(LIDV))\r\n\r\nAUClast <-\r\n  data.frame(stack(sapply(split(AUClast, AUClast$ID), function(df)\r\n    trapz(df$TIME, df$LIDV))))\r\nnames(AUClast) <- c(\"AUC\", \"ID\")\r\n\r\nAUClast$ID <- as.numeric(as.character(AUClast$ID))\r\nAUClast <- AUClast[order(AUClast$ID),]\r\nAUClast <-\r\n  merge(AUClast, unique(my_data[c(\"ID\", \"ETHN\")]), by = \"ID\")\r\n\r\n\r\ngg1 <- Cmax %>%\r\n  ggplot(aes(x = ETHN, y = Cmax, group = ETHN)) +\r\n  stat_summary(fun.data = mean_cl_normal,\r\n               geom = \"errorbar\",\r\n               width = 0) +\r\n  stat_summary(shape = 21, fill = \"white\", size = 0.2) +\r\n  labs(title = \"Cmax (ng/mL)\", subtitle = \"Mean (95% CI)\") +\r\n  scale_y_log10(breaks = c(0.3, 1, 3, 10, 30, 100, 300, 1000, 3000),\r\n                limits = c(60, 300)) +   annotation_logticks(base = 10,\r\n                                                             sides = \"l\",\r\n                                                             color = rgb(0.5, 0.5, 0.5)) +\r\n  theme(\r\n    axis.title.x = element_blank(),\r\n    axis.title.y = element_blank(),\r\n    plot.subtitle = element_text(color = rgb(0.3, 0.3, 0.3))\r\n  )\r\n\r\ngg2 <- gg1 %+% #Cmax %+%\r\n  aes(x = ETHN, y = Ctrough) +\r\n  labs(title = \"Ctrough (ng/mL)\") +\r\n  scale_y_log10(breaks = c(0.3, 1, 3, 10, 30, 100, 300, 1000, 3000),\r\n                limits = c(0.6, 9))\r\n\r\n\r\ngg3 <- gg1 %+% AUClast %+% aes(x = ETHN, y = AUC) +\r\n  labs(title = \"AUClast (h.(ng/mL))\") +\r\n  scale_y_log10(breaks = c(0.3, 1, 3, 10, 30, 100, 300, 1000, 3000),\r\n                limits = c(500, 1500))\r\n\r\ngrid.arrange(arrangeGrob(gg1, gg2, gg3, nrow = 1), nrow = 1)\r\n\r\n\r\n\r\n\r\nFigure 3: Key messages are made more obvious by directly plotting the pharmacokinetic parameters of interest.\r\n\r\n\r\n\r\n\r\n\r\nCmax2  <- Cmax %>%\r\n  mutate(DV = Cmax,\r\n         logDV = log(Cmax),\r\n         LABEL = \"Cmax\") %>%\r\n  select(c(\"ID\", \"ETHN\", \"DV\", \"logDV\", \"LABEL\"))\r\n\r\nresults <- t.test(logDV ~ ETHN, Cmax2)\r\n\r\nPKmetrics <- data.frame(\r\n  y2.5 = exp(results$conf.int[1]),\r\n  y97.5 = exp(results$conf.int[2]),\r\n  ymean = exp(as.numeric(results$estimate[1] - results$estimate[2])),\r\n  var = \"Cmax\",\r\n  unit = \"ng/mL\"\r\n)\r\n\r\nCtrough2 <- Ctrough %>%\r\n  mutate(DV = Ctrough,\r\n         logDV = log(Ctrough),\r\n         LABEL = \"Ctrough\") %>%\r\n  select(c(\"ID\", \"ETHN\", \"DV\", \"logDV\", \"LABEL\"))\r\n\r\nresults <- t.test(logDV ~ ETHN, Ctrough2)\r\n\r\nPKmetrics <- rbind(\r\n  PKmetrics,\r\n  data.frame(\r\n    y2.5 = exp(results$conf.int[1]),\r\n    y97.5 = exp(results$conf.int[2]),\r\n    ymean = exp(as.numeric(results$estimate[1] - results$estimate[2])),\r\n    var = \"Ctrough\",\r\n    unit = \"ng/mL\"\r\n  )\r\n)\r\n\r\nAUClast2 <- AUClast %>%\r\n  mutate(DV = AUC,\r\n         logDV = log(AUC),\r\n         LABEL = \"AUClast\") %>%\r\n  select(c(\"ID\", \"ETHN\", \"DV\", \"logDV\", \"LABEL\"))\r\n\r\nresults <- t.test(logDV ~ ETHN, AUClast2)\r\n\r\nPKmetrics <- rbind(\r\n  PKmetrics,\r\n  data.frame(\r\n    y2.5 = exp(results$conf.int[1]),\r\n    y97.5 = exp(results$conf.int[2]),\r\n    ymean = exp(as.numeric(results$estimate[1] - results$estimate[2])),\r\n    var = \"AUClast\",\r\n    unit = \"h.ng/mL\"\r\n  )\r\n)\r\n\r\nPKmetrics$var <-\r\n  factor(PKmetrics$var, levels = c(\"AUClast\", \"Ctrough\", \"Cmax\"))\r\n\r\nPKmetrics %>%\r\n  ggplot(aes(\r\n    x = var,\r\n    y = ymean,\r\n    ymin = y2.5,\r\n    ymax = y97.5\r\n  )) +\r\n  paper_theme() +\r\n  geom_hline(\r\n    yintercept = 1,\r\n    size = 1,\r\n    colour = \"red\",\r\n    alpha = 0.1\r\n  ) +\r\n  scale_y_log10(breaks = c(0.25, 0.5, 1, 2, 4)) +\r\n  geom_point() +\r\n  geom_errorbar(width = 0) +\r\n  xlab(\"\") +\r\n  scale_x_discrete(breaks = NULL, labels = NULL) +\r\n  ylab(\"Ratios between Japanese and Caucasian Mean (95% CI)\") +\r\n  geom_text(aes(\r\n    x = var,\r\n    y = 0.175,\r\n    label = paste0(var, \"\\n(\", unit, \")\")\r\n  )) +\r\n  theme(\r\n    panel.grid.major.x = element_line(color = \"gray\", size = 0.2),\r\n    panel.grid.major.y = element_blank(),\r\n    panel.border = element_blank(),\r\n    axis.title.x = element_text(size = 11, vjust = -1.25),\r\n    axis.title.y = element_blank()\r\n  ) +\r\n  coord_flip(ylim = c(0.15, 5)) \r\n\r\n\r\n\r\n\r\nFigure 4: Or even only their ratios: Forest plot of Ratios of Japanese:Caucasian for Cmax, Ctrough, AUClast\r\n\r\n\r\n\r\n\r\n\r\nsessionInfo()\r\n\r\n\r\n## R version 4.0.2 (2020-06-22)\r\n## Platform: x86_64-w64-mingw32/x64 (64-bit)\r\n## Running under: Windows 10 x64 (build 19041)\r\n## \r\n## Matrix products: default\r\n## \r\n## locale:\r\n## [1] LC_COLLATE=English_Switzerland.1252 \r\n## [2] LC_CTYPE=English_Switzerland.1252   \r\n## [3] LC_MONETARY=English_Switzerland.1252\r\n## [4] LC_NUMERIC=C                        \r\n## [5] LC_TIME=English_Switzerland.1252    \r\n## \r\n## attached base packages:\r\n## [1] grid      stats     graphics  grDevices utils    \r\n## [6] datasets  methods   base     \r\n## \r\n## other attached packages:\r\n##  [1] data.table_1.12.8  gridExtra_2.3     \r\n##  [3] caTools_1.18.0     RColorBrewer_1.1-2\r\n##  [5] forcats_0.5.0      stringr_1.4.0     \r\n##  [7] dplyr_1.0.0        purrr_0.3.4       \r\n##  [9] readr_1.3.1        tidyr_1.1.0       \r\n## [11] tibble_3.0.3       ggplot2_3.3.2     \r\n## [13] tidyverse_1.3.0    distill_1.1       \r\n## \r\n## loaded via a namespace (and not attached):\r\n##  [1] httr_1.4.1          jsonlite_1.7.0     \r\n##  [3] splines_4.0.2       modelr_0.1.8       \r\n##  [5] Formula_1.2-3       assertthat_0.2.1   \r\n##  [7] highr_0.8           latticeExtra_0.6-29\r\n##  [9] blob_1.2.1          cellranger_1.1.0   \r\n## [11] yaml_2.2.1          pillar_1.4.6       \r\n## [13] backports_1.1.7     lattice_0.20-41    \r\n## [15] glue_1.4.1          digest_0.6.25      \r\n## [17] checkmate_2.0.0     rvest_0.3.5        \r\n## [19] colorspace_1.4-1    htmltools_0.5.0    \r\n## [21] Matrix_1.2-18       pkgconfig_2.0.3    \r\n## [23] broom_0.7.0         haven_2.3.1        \r\n## [25] scales_1.1.1        jpeg_0.1-8.1       \r\n## [27] downlit_0.2.1       htmlTable_2.0.1    \r\n## [29] farver_2.0.3        generics_0.0.2     \r\n## [31] ellipsis_0.3.1      withr_2.2.0        \r\n## [33] nnet_7.3-14         cli_2.0.2          \r\n## [35] survival_3.1-12     magrittr_1.5       \r\n## [37] crayon_1.3.4        readxl_1.3.1       \r\n## [39] evaluate_0.14       fs_1.4.2           \r\n## [41] fansi_0.4.1         xml2_1.3.2         \r\n## [43] foreign_0.8-80      tools_4.0.2        \r\n## [45] hms_0.5.3           lifecycle_0.2.0    \r\n## [47] munsell_0.5.0       reprex_0.3.0       \r\n## [49] cluster_2.1.0       compiler_4.0.2     \r\n## [51] rlang_0.4.7         rstudioapi_0.11    \r\n## [53] htmlwidgets_1.5.1   labeling_0.3       \r\n## [55] bitops_1.0-6        base64enc_0.1-3    \r\n## [57] rmarkdown_2.5       gtable_0.3.0       \r\n## [59] DBI_1.1.0           R6_2.4.1           \r\n## [61] lubridate_1.7.9     knitr_1.29         \r\n## [63] Hmisc_4.4-0         stringi_1.4.6      \r\n## [65] Rcpp_1.0.5          rpart_4.1-15       \r\n## [67] vctrs_0.3.1         acepack_1.4.1      \r\n## [69] png_0.1-7           dbplyr_1.4.4       \r\n## [71] tidyselect_1.1.0    xfun_0.15\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/402-case2-pk/402-case2-pk_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2020-12-12T17:18:37+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/403-case3-waterfall/",
    "title": "Why a waterfall plot?",
    "description": "Questioning the defaults.",
    "author": [
      {
        "name": "Marc Vandemeulebroecke",
        "url": "https://graphicsprinciples.github.io/"
      },
      {
        "name": "Mark Baillie",
        "url": "https://graphicsprinciples.github.io/"
      },
      {
        "name": "Alison Margolskee",
        "url": "https://graphicsprinciples.github.io/"
      },
      {
        "name": "Baldur Magnusson",
        "url": "https://graphicsprinciples.github.io/"
      }
    ],
    "date": "2020-12-12",
    "categories": [
      "case studies",
      "example code",
      "waterfall plot",
      "defaults"
    ],
    "contents": "\r\nThis case study illustrates the importance of aligning a graph with the scientific question it should address, the option of filtering signals through a model, and finally the display of a scientific answer in a condensed messaging graph.\r\nConsider a small early development trial, randomized and placebo-controlled (2:1 randomization), with a continuous primary endpoint measured at baseline and longitudinally over a period of 4 weeks. Lower outcome values are better, and there are no dropouts and no missing data. Suppose that the team is interested in the effect of the drug at the last measurement time point, as it is often the case. A common approach in early development trials is to simply plot the observed change scores in a so-called “waterfall plot” such as Figure 1.\r\n\r\n\r\nggplot(t4dat, aes(x = sort_id, y = cfb, fill = factor(ztext))) +\r\n  geom_col(alpha = 0.8) +\r\n  scale_fill_brewer(palette = \"Dark2\", name = \"Treatment\") +\r\n  paper_theme() +\r\n  theme(\r\n    legend.position = c(0.8, 0.2),\r\n    legend.background = element_blank(),\r\n    legend.title = element_blank(),\r\n    axis.ticks.x = element_blank(),\r\n    axis.text.x = element_blank(),\r\n    panel.grid.major.x = element_blank(),\r\n    panel.border = element_rect(color = \"grey\", fill = NA)\r\n  ) +\r\n  labs(x = \"Subject\", y = \"Change from baseline\",\r\n       title = \"Week 4 outcome by treatment\")\r\n\r\n\r\n\r\n\r\nFigure 1: Waterfall plot of week 4 outcome\r\n\r\n\r\n\r\nTo probe Law 1, what is the question addressed by this plot? It asks about the treatment effect after 4 weeks of treatment. Is this the right question? Let us assume for a moment that it is. Then a waterfall plot is not ideal for addressing it. Small treatment effects are difficult to discern, especially with an unbalanced randomization ratio. The audience must observe the distribution of color across the entire plot just to determine which treatment is more beneficial; this can become even more difficult with a larger sample size or more than two treatment groups. In Figure 1, one might see a treatment benefit, but how large is it and how certain of it are we? The popularity of waterfall plots is a mystery.\r\nIf we insist on week 4 as the only time point of interest, we could present overlaid density plots or side-by-side boxplots for a better appreciation of the difference in distribution between the two treatment arms. Figure 2 shows an example with the raw data points included, which is a much better alternative to Figure 1. The side-by-side placement facilitates the treatment comparison, and the plot is simple, familiar and uses minimal ink for what it shows. Graphical attributes (colors, font size, etc.) are easily readable.\r\n\r\n\r\nggplot(data = t4dat, aes(x = ztext, y = cfb, colour = ztext)) +\r\n  geom_boxplot(width = 0.25) +\r\n  geom_jitter(alpha = 0.25, width = 0.1) +\r\n  scale_colour_brewer(palette = \"Dark2\") +\r\n  labs(x = \"\", y = \"Change from baseline\") +\r\n  paper_theme() +\r\n  theme(legend.position = \"none\") +\r\n  labs(x = \"\", y = \"Change from baseline\",\r\n       title = \"Week 4 outcome\") +\r\n  theme(\r\n    panel.border = element_rect(color = \"grey\", fill = NA, size = 0.25),\r\n    plot.title = element_text(size = 12),\r\n    axis.text.y = element_text(size = 8),\r\n    axis.text.x = element_text(size = 10),\r\n    axis.title.y = element_text(size = 10),\r\n    axis.ticks.x = element_blank(),\r\n    panel.grid.major.x = element_blank()\r\n  )\r\n\r\n\r\n\r\n\r\nFigure 2: Boxplots of week 4 outcome\r\n\r\n\r\n\r\nHowever, with such rich longitudinal data, it may be more informative to ask the question about the treatment effect during – not just after – the first 4 weeks of treatment. This is especially relevant in the early, more exploratory development phase (and it would be even more relevant if there were dropouts). As a rule, the recommended first step is to visualize the totality of the data. Figure 3 does this and includes means by treatment and time point. We see large inter-individual variability and overlap between the treatment groups. We also start to get an appreciation for the time-course of a mean effect. We see linear trajectories of the means over time, with the active arm appearing to improve and the placebo arm staying fairly constant. We cannot exclude that the apparent gap might continue to increase beyond 4 weeks of treatment. This plot, while doing little more than displaying the raw data, is already worth sharing with the project team. It facilitates a much richer understanding of the data than the previous two plots. It shows the data clearly i.e. Law 2.\r\n\r\n\r\nmd <- dres %>%\r\n  group_by(time, ztext) %>%\r\n  summarise(\r\n    m = mean(y),\r\n    s = sd(y),\r\n    n = n(),\r\n    se = s / sqrt(n)\r\n  )\r\n\r\nggplot() +\r\n  theme(legend.position = c(0.8, 0.65),\r\n        legend.background = element_blank()) +\r\n  geom_line(data = dres,\r\n            aes(\r\n              x = time,\r\n              y = y,\r\n              group = id,\r\n              colour = factor(ztext)\r\n            ),\r\n            alpha = 0.35) +\r\n  geom_line(data = md,\r\n            aes(\r\n              x = time,\r\n              y = m,\r\n              colour = factor(ztext)\r\n            ),\r\n            size = 1) +\r\n  geom_point(data = md, aes(\r\n    x = time,\r\n    y = m,\r\n    ymin = m - s,\r\n    ymax = m + s,\r\n    colour = ztext\r\n  )) +\r\n  scale_y_continuous(limits = c(min(dres$y) - 2.5, max(dres$y))) +\r\n  scale_colour_brewer(palette = \"Dark2\", name = \"\") +\r\n  labs(x = \"Week\", y = \"Outcome\",\r\n       title = \"Longitudinal individual outcomes \\nwith group means\") +\r\n  paper_theme() +\r\n  theme(\r\n    panel.border = element_rect(color = \"grey\", fill = NA, size = 0.25),\r\n    plot.title = element_text(size = 10),\r\n    axis.text.y = element_text(size = 8),\r\n    axis.text.x = element_text(size = 8),\r\n    axis.title.y = element_text(size = 10),\r\n    axis.title.x = element_text(size = 10),\r\n    legend.position = c(0.15, 0.225),\r\n    legend.background = element_blank()\r\n  )\r\n\r\n\r\n\r\n\r\nFigure 3: Spaghetti plots & mean +/- SD\r\n\r\n\r\n\r\nDepending on the goal of the analysis, we could stop here. But if we want to quantify the treatment difference while adjusting for important covariates, we should proceed with a statistical model. Based on Figure 3 a linear model appears appropriate. We fit a linear model with treatment, patient-specific intercept and slope, and we now also adjust for the baseline value of the primary endpoint and for any other important covariates. We can then visualize the data filtered through this model, omitting the raw data but displaying longitudinal point estimates and some form of uncertainty intervals for both treatment groups (Figure 4). This gets closer to the nature of a messaging graph, focusing directly on the results of our model. Optionally – and depending on the audience! – we could even go one final step further and display the treatment difference directly, as in Figure 5. This plot addresses the question about the treatment effect over time without requiring any mental arithmetic. We can read off approximate estimates for the treatment effect, and the level of confidence is easily appreciable from the added confidence band (which does include zero!). Appropriate and parsimonious annotations make the message even more obvious, Law 3, also through “effectively redundant” information (stating what can be seen).\r\n\r\n\r\n## Model fit to longtiduinal data\r\nadat <- dres %>%\r\n  filter(time > 0)\r\n\r\nmod <-\r\n  stan_lmer(\r\n    y ~ time * factor(z) + baseline + x1 + x2 + (time | id),\r\n    data = adat,\r\n    chains = 4,\r\n    iter = 500,\r\n    cores = 4\r\n  )\r\n\r\nnd1 <- dres %>%\r\n  select(id, time, baseline, x1, x2, z)\r\n\r\nnd2 <- dres %>%\r\n  select(id, time, baseline, x1, x2, z) %>%\r\n  mutate(z = 1 - z)\r\n\r\nnd <- bind_rows(nd1, nd2) %>%\r\n  arrange(id, time, z)\r\n\r\nprs <- c(0.05, 0.5, 0.95)\r\n\r\nppnd <- nd %>% select(id, time, z) %>%\r\n  bind_cols(as_tibble(t(\r\n    posterior_linpred(mod, newdata = nd, re.form =  ~ 0)\r\n  ))) %>%\r\n  gather(4:1003, key = \"ppid\", value = \"ypred\") %>%\r\n  spread(z, ypred) %>%\r\n  mutate(contr = `1` - `0`) %>%\r\n  group_by(ppid, time) %>%\r\n  do({\r\n    m0 <- mean(.$`0`)\r\n    m1 <- mean(.$`1`)\r\n    mc <- mean(.$contr)\r\n    as_tibble(cbind(m0, m1, mc))\r\n  }) %>%\r\n  ungroup() %>%\r\n  group_by(time) %>%\r\n  do({\r\n    q0 <- t(quantile(.$m0, probs = prs))\r\n    q1 <- t(quantile(.$m1, probs = prs))\r\n    contr <- t(quantile(.$mc, probs = prs))\r\n    as_tibble(rbind(q0, q1, contr)) %>%\r\n      mutate(var = c(\"Placebo\", \"Active\", \"Contrast\"))\r\n  })\r\n\r\n## Treatment difference, median & 90% CI errorbars\r\nppnd %>%\r\n  filter(var != \"Contrast\") %>%\r\n  ggplot(aes(\r\n    x = time,\r\n    y = `50%`,\r\n    ymin = `5%`,\r\n    ymax = `95%`,\r\n    colour = factor(var, levels = c(\"Placebo\", \"Active\"))\r\n  )) +\r\n  geom_pointrange(position = position_dodge(width = 0.3)) +\r\n  geom_line(position = position_dodge(width = 0.3)) +\r\n  scale_color_brewer(palette = \"Dark2\", name = \"\") +\r\n  paper_theme() +\r\n  theme(legend.position = c(0.15, 0.245),\r\n        legend.background = element_blank()) +\r\n  theme(\r\n    panel.border = element_rect(color = \"grey\", fill = NA, size = 0.25),\r\n    plot.title = element_text(size = 10, margin = rep(unit(\r\n      0.01 * 234, \"mm\"\r\n    ), 3)),\r\n    plot.subtitle = element_text(\r\n      size = 8,\r\n      color = rgb(0.3, 0.3, 0.3),\r\n      margin = rep(unit(0.001 * 234, \"mm\"), 3)\r\n    ),\r\n    axis.text.y = element_text(size = 8),\r\n    axis.text.x = element_text(size = 8),\r\n    axis.title.y = element_text(size = 10),\r\n    axis.title.x = element_text(size = 10)\r\n  ) +\r\n  labs(\r\n    x = \"Week\",\r\n    y = \"Outcome\",\r\n    title = \"Active group improves over time\",\r\n    subtitle = \"Posterior median (90% credible interval)\"\r\n  )\r\n\r\n\r\n\r\n\r\nFigure 4: Treatment difference, median & 90% CI errorbars\r\n\r\n\r\n\r\nIt is worth emphasizing that this last plot should not be the only one generated, and probably not the only one shown either. Strongly reduced messaging graphs require a robust understanding of the underlying data, which can only be built through a workflow such as the one described above. Further, depending on the situation and the audience, they might be challenged as loaded or unscientific. (E.g., the apparently perfect linear trend in Figure 5 appears “unrealistic”.) It is therefore important to ensure and emphasize that this last plot derives from a model which (as every model) is intended to separate the signal from the noise, and that the choice of this model is justified by a thorough inspection of the data.\r\n\r\n\r\nppnd %>%\r\n  filter(var == \"Contrast\" & time > 0) %>%\r\n  ggplot(aes(x = time, y = `50%`)) +\r\n  geom_ribbon(aes(ymin = `5%`, ymax = `95%`), fill = \"black\", alpha = 0.15) +\r\n  geom_point(size = 1.5) + geom_line(size = 1) +\r\n  geom_hline(yintercept = 0, linetype = 2)  +\r\n  labs(\r\n    x = \"Week\",\r\n    y = \"Treatment difference\",\r\n    title = \"Treatment effect increases over time\",\r\n    subtitle = \"Posterior median (90% credible interval)\"\r\n  ) +\r\n  geom_segment(\r\n    aes(\r\n      x = 0.98,\r\n      y = -0.01,\r\n      xend = 0.98,\r\n      yend = -3.5\r\n    ),\r\n    arrow = arrow(length = unit(0.02 * 234, \"mm\")),\r\n    alpha = 0.25\r\n  ) +\r\n  annotate(\r\n    \"text\",\r\n    label = \"Greater benefit\",\r\n    x = 1.4,\r\n    y = -3.4,\r\n    size = 5,\r\n    alpha = 0.75\r\n  ) +\r\n  paper_theme() +\r\n  theme(\r\n    panel.border = element_rect(color = \"grey\", fill = NA, size = 0.25),\r\n    plot.subtitle = element_text(size = 10, color = rgb(0.3, 0.3, 0.3))\r\n  )\r\n\r\n\r\n\r\n\r\nFigure 5: Treatment difference, median & 90% CI ribbon\r\n\r\n\r\n\r\n\r\n\r\nsessionInfo()\r\n\r\n\r\n## R version 4.0.2 (2020-06-22)\r\n## Platform: x86_64-w64-mingw32/x64 (64-bit)\r\n## Running under: Windows 10 x64 (build 19041)\r\n## \r\n## Matrix products: default\r\n## \r\n## locale:\r\n## [1] LC_COLLATE=English_Switzerland.1252 \r\n## [2] LC_CTYPE=English_Switzerland.1252   \r\n## [3] LC_MONETARY=English_Switzerland.1252\r\n## [4] LC_NUMERIC=C                        \r\n## [5] LC_TIME=English_Switzerland.1252    \r\n## \r\n## attached base packages:\r\n## [1] grid      stats     graphics  grDevices utils    \r\n## [6] datasets  methods   base     \r\n## \r\n## other attached packages:\r\n##  [1] RColorBrewer_1.1-2 data.table_1.12.8 \r\n##  [3] gridExtra_2.3      rstanarm_2.21.1   \r\n##  [5] Rcpp_1.0.5         caTools_1.18.0    \r\n##  [7] forcats_0.5.0      stringr_1.4.0     \r\n##  [9] dplyr_1.0.0        purrr_0.3.4       \r\n## [11] readr_1.3.1        tidyr_1.1.0       \r\n## [13] tibble_3.0.3       ggplot2_3.3.2     \r\n## [15] tidyverse_1.3.0   \r\n## \r\n## loaded via a namespace (and not attached):\r\n##   [1] minqa_1.2.4          colorspace_1.4-1    \r\n##   [3] ellipsis_0.3.1       ggridges_0.5.2      \r\n##   [5] rsconnect_0.8.16     markdown_1.1        \r\n##   [7] base64enc_0.1-3      fs_1.4.2            \r\n##   [9] rstudioapi_0.11      farver_2.0.3        \r\n##  [11] rstan_2.21.2         DT_0.14             \r\n##  [13] fansi_0.4.1          lubridate_1.7.9     \r\n##  [15] xml2_1.3.2           splines_4.0.2       \r\n##  [17] codetools_0.2-16     downlit_0.2.1       \r\n##  [19] knitr_1.29           shinythemes_1.1.2   \r\n##  [21] bayesplot_1.7.2      jsonlite_1.7.0      \r\n##  [23] nloptr_1.2.2.2       broom_0.7.0         \r\n##  [25] dbplyr_1.4.4         shiny_1.5.0         \r\n##  [27] compiler_4.0.2       httr_1.4.1          \r\n##  [29] backports_1.1.7      Matrix_1.2-18       \r\n##  [31] assertthat_0.2.1     fastmap_1.0.1       \r\n##  [33] cli_2.0.2            later_1.1.0.1       \r\n##  [35] htmltools_0.5.0      prettyunits_1.1.1   \r\n##  [37] tools_4.0.2          igraph_1.2.6        \r\n##  [39] gtable_0.3.0         glue_1.4.1          \r\n##  [41] reshape2_1.4.4       V8_3.4.0            \r\n##  [43] cellranger_1.1.0     vctrs_0.3.1         \r\n##  [45] nlme_3.1-148         crosstalk_1.1.0.1   \r\n##  [47] xfun_0.15            ps_1.3.3            \r\n##  [49] lme4_1.1-26          rvest_0.3.5         \r\n##  [51] mime_0.9             miniUI_0.1.1.1      \r\n##  [53] lifecycle_0.2.0      gtools_3.8.2        \r\n##  [55] statmod_1.4.35       MASS_7.3-51.6       \r\n##  [57] zoo_1.8-8            scales_1.1.1        \r\n##  [59] colourpicker_1.1.0   hms_0.5.3           \r\n##  [61] promises_1.1.1       parallel_4.0.2      \r\n##  [63] inline_0.3.17        shinystan_2.5.0     \r\n##  [65] yaml_2.2.1           curl_4.3            \r\n##  [67] loo_2.4.1            StanHeaders_2.21.0-6\r\n##  [69] distill_1.1          stringi_1.4.6       \r\n##  [71] highr_0.8            dygraphs_1.1.1.6    \r\n##  [73] boot_1.3-25          pkgbuild_1.1.0      \r\n##  [75] rlang_0.4.7          pkgconfig_2.0.3     \r\n##  [77] bitops_1.0-6         matrixStats_0.57.0  \r\n##  [79] evaluate_0.14        lattice_0.20-41     \r\n##  [81] labeling_0.3         rstantools_2.1.1    \r\n##  [83] htmlwidgets_1.5.1    tidyselect_1.1.0    \r\n##  [85] processx_3.4.3       plyr_1.8.6          \r\n##  [87] magrittr_1.5         R6_2.4.1            \r\n##  [89] generics_0.0.2       DBI_1.1.0           \r\n##  [91] pillar_1.4.6         haven_2.3.1         \r\n##  [93] withr_2.2.0          xts_0.12.1          \r\n##  [95] survival_3.1-12      modelr_0.1.8        \r\n##  [97] crayon_1.3.4         rmarkdown_2.5       \r\n##  [99] readxl_1.3.1         blob_1.2.1          \r\n## [101] callr_3.4.3          threejs_0.3.3       \r\n## [103] reprex_0.3.0         digest_0.6.25       \r\n## [105] xtable_1.8-4         httpuv_1.5.4        \r\n## [107] RcppParallel_5.0.2   stats4_4.0.2        \r\n## [109] munsell_0.5.0        shinyjs_2.0.0\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/403-case3-waterfall/403-case3-waterfall_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2020-12-12T17:19:24+01:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  }
]
